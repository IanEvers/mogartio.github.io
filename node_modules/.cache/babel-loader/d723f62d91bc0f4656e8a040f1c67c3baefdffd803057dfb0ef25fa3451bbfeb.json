{"ast":null,"code":"var _jsxFileName = \"/home/ian/codigo/mogartio.github.io/src/components/Sschess.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport React from 'react';\nimport caballoBlanco from './../img/caballo_blanco.gif';\nimport torreBlanca from './../img/torre_blanco.gif';\nimport alfilBlanco from './../img/alfil_blanco.gif';\nimport caballoRojo from './../img/caballo_rojo.gif';\nimport torreRojo from './../img/torre_rojo.gif';\nimport alfilRojo from './../img/alfil_rojo.gif';\nimport '.././styles/gridStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sschess() {\n  _s();\n  const [level, setLevel] = useState(0);\n  const string_level = \"NIVEL: \" + String(level - 1);\n  const [printt, setPrintt] = useState();\n  let filaActual;\n  let colActual;\n  const [contadorPiezas, setContador] = useState(level + 3);\n  const [coordenadasInicialesNivel, setCoordenadasIniciales] = useState([]);\n  const [coordenadaActual, setCoordenadaActual] = useState([]);\n  const [coordenadasMarcadas, setCoordenadasMarcadas] = useState([[]]);\n  const [estadoJuego, setEstadoJuego] = useState(false);\n  const [piecesDictionary, setPiecesDictionary] = useState({\n    'torre': [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0], [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8]],\n    'caballo': [[1, 2], [2, 1], [-1, 2], [-2, 1], [-1, -2], [-2, -1], [1, -2], [2, -1]],\n    'alfil': [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [-1, 1], [-2, 2], [-3, 3], [-4, 4], [-5, 5], [-6, 6], [-7, 7], [-8, 8], [-1, -1], [-2, -2], [-3, -3], [-4, -4], [-5, -5], [-6, -6], [-7, -7], [-8, -8], [1, -1], [2, -2], [3, -3], [4, -4], [5, -5], [6, -6], [7, -7], [8, -8]]\n  });\n  const inicializarMatrizz = () => {\n    const nuevaMatrizz = [];\n    for (let i = 0; i < 8; i++) {\n      const fila = new Array(8).fill(\"\");\n      nuevaMatrizz.push(fila);\n    }\n    return nuevaMatrizz;\n  };\n  const inicializarMatriz = () => {\n    const nuevaMatriz = [];\n    for (let i = 0; i < 8; i++) {\n      const fila = new Array(8).fill(\"\");\n      nuevaMatriz.push(fila);\n    }\n    return nuevaMatriz;\n  };\n  const [estadoInicial, setEstadoInicial] = useState(inicializarMatrizz);\n  const [tablero, setTablero] = useState(inicializarMatriz);\n  const esCoordenadaValida = (fila, col) => {\n    return fila >= 0 && fila < 8 && col >= 0 && col < 8;\n  };\n  const obtenerCoordenadasPosibles = (col, fila) => {\n    let nuevasCoordenadasMarcadas = [];\n    let piezaActual = tablero[fila][col];\n    for (let i = 0; i < piecesDictionary[piezaActual].length; i++) {\n      let colInspeccionada = col + piecesDictionary[piezaActual][i][1];\n      let filaInspeccionada = fila + piecesDictionary[piezaActual][i][0];\n      if (esCoordenadaValida(filaInspeccionada, colInspeccionada) && tablero[filaInspeccionada][colInspeccionada] != \"\") {\n        nuevasCoordenadasMarcadas.push([filaInspeccionada, colInspeccionada]);\n      }\n    }\n    setCoordenadasMarcadas([...nuevasCoordenadasMarcadas]);\n  };\n  function inicializarJuego(nivelActual) {\n    setLevel(nivelActual + 1);\n    setContador(nivelActual + 3);\n    setEstadoJuego(true);\n    setCoordenadasMarcadas([]);\n    let colInicial = Math.floor(Math.random() * 8);\n    let filInicial = Math.floor(Math.random() * 8);\n    let coordenadaInicial = [filInicial, colInicial];\n    guardarCoordenadaInicial([...coordenadaInicial]);\n    const keysArray = Object.keys(piecesDictionary);\n    let randomIndex = Math.floor(Math.random() * keysArray.length);\n    let piezaInicial = keysArray[randomIndex];\n    filaActual = filInicial;\n    colActual = colInicial;\n    let nuevoTablero = [...estadoInicial];\n    nuevoTablero[filInicial][colInicial] = piezaInicial;\n    tablero[filInicial][colInicial] = piezaInicial;\n    setEstadoInicial(nuevoTablero);\n    for (let i = 0; i < nivelActual + 3; i++) {\n      [piezaInicial, filInicial, colInicial] = generarNuevaPieza(piezaInicial, filInicial, colInicial);\n      tablero[filInicial][colInicial] = piezaInicial;\n    }\n    setCoordenadaActual([filaActual, colActual]);\n    coordenadaActual[0] = filaActual;\n    coordenadaActual[1] = colActual;\n    setCoordenadasMarcadas([]);\n    obtenerCoordenadasPosibles(colActual, filaActual);\n  }\n  const guardarCoordenadaInicial = coordenadaInicial => {\n    setCoordenadasIniciales(coordenadaInicial);\n  };\n  const generarNuevaPieza = (piezaInicial, filInicial, colInicial) => {\n    while (true) {\n      let direccion = piecesDictionary[piezaInicial][Math.floor(Math.random() * piecesDictionary[piezaInicial].length)];\n      let filaNueva = filInicial + direccion[0];\n      let colNueva = colInicial + direccion[1];\n      if (filaNueva < 0 || colNueva < 0 || filaNueva > 7 || colNueva > 7 || estadoInicial[filaNueva][colNueva] != \"\") {\n        continue;\n      }\n      let keysArray = Object.keys(piecesDictionary);\n      let randomIndex = Math.floor(Math.random() * keysArray.length);\n      let piezaNueva = keysArray[randomIndex];\n      let nuevoTablero = [...estadoInicial];\n      nuevoTablero[filaNueva][colNueva] = piezaNueva;\n      setEstadoInicial(nuevoTablero);\n      return [piezaNueva, filaNueva, colNueva];\n    }\n  };\n  const coordenadaAMarcar = (fila, col) => {\n    for (let i = 0; i < coordenadasMarcadas.length; i++) {\n      if (coordenadasMarcadas[i][0] == fila && coordenadasMarcadas[i][1] == col) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const hacerMovimiento = (fila, col) => {\n    if (coordenadaAMarcar(fila, col)) {\n      let nuevoTablero = [...tablero];\n      nuevoTablero[coordenadaActual[0]][coordenadaActual[1]] = \"\";\n      setTablero(nuevoTablero);\n      setContador(contadorPiezas - 1);\n      setPrintt(contadorPiezas);\n      if (contadorPiezas == 1) {\n        setLevel(level + 1);\n        setEstadoJuego(false);\n        for (let i = 0; i < 8; i++) {\n          for (let j = 0; j < 8; j++) {\n            tablero[i][j] = \"\";\n            estadoInicial[i][j] = \"\";\n          }\n        }\n        setCoordenadaActual([]);\n        inicializarJuego(level);\n        return;\n      }\n      setCoordenadaActual([fila, col]);\n      setCoordenadasMarcadas([]);\n      obtenerCoordenadasPosibles(col, fila);\n    }\n  };\n  const reiniciarNivel = () => {\n    setCoordenadaActual([...coordenadasInicialesNivel]);\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        tablero[i][j] = estadoInicial[i][j];\n      }\n    }\n    setContador(level + 2);\n    obtenerCoordenadasPosibles(coordenadasInicialesNivel[1], coordenadasInicialesNivel[0]);\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SschessContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tituloSSchess\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Shape Shifter Chess!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameInfoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivelActual\",\n        children: string_level\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: estadoJuego ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: reiniciarNivel,\n          children: \"Reiniciar Nivel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: inicializarJuego(1),\n          children: \"Empezar juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: tablero.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: coordenadaAMarcar(rowIndex, cellIndex) ? {\n              width: '100%',\n              display: 'flex',\n              height: '100%',\n              borderColor: 'rgb(255, 30, 88)',\n              borderWidth: '3px',\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexGrow: '0%',\n              maxHeight: '100%',\n              boxSizing: 'border-box',\n              objectFit: 'contain'\n            } : {\n              width: '100%',\n              height: '100%',\n              display: 'flex',\n              borderColor: '#white',\n              borderWidth: '3px',\n              justifyContent: 'center',\n              alignItems: 'center',\n              flexGrow: '0%',\n              maxHeight: '100%',\n              boxSizing: 'border-box',\n              objectFit: 'contain'\n            },\n            onClick: () => hacerMovimiento(rowIndex, cellIndex),\n            className: \"cell\",\n            children: [cell === \"torre\" && rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: torreRojo,\n              alt: \"torreR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 119\n            }, this), cell === \"torre\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: torreBlanca,\n              alt: \"torreB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 120\n            }, this), cell === \"alfil\" && rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: alfilRojo,\n              alt: \"alfilR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 119\n            }, this), cell === \"alfil\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: alfilBlanco,\n              alt: \"alfilB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 120\n            }, this), cell === \"caballo\" && rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: caballoRojo,\n              alt: \"caballoR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 121\n            }, this), cell === \"caballo\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: caballoBlanco,\n              alt: \"caballoB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 122\n            }, this)]\n          }, cellIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n_s(Sschess, \"yX8Fq//ZuK/1mByKOCnL9/Cmp4M=\");\n_c = Sschess;\n;\nvar _c;\n$RefreshReg$(_c, \"Sschess\");","map":{"version":3,"names":["useEffect","useState","Papa","React","caballoBlanco","torreBlanca","alfilBlanco","caballoRojo","torreRojo","alfilRojo","jsxDEV","_jsxDEV","Sschess","_s","level","setLevel","string_level","String","printt","setPrintt","filaActual","colActual","contadorPiezas","setContador","coordenadasInicialesNivel","setCoordenadasIniciales","coordenadaActual","setCoordenadaActual","coordenadasMarcadas","setCoordenadasMarcadas","estadoJuego","setEstadoJuego","piecesDictionary","setPiecesDictionary","inicializarMatrizz","nuevaMatrizz","i","fila","Array","fill","push","inicializarMatriz","nuevaMatriz","estadoInicial","setEstadoInicial","tablero","setTablero","esCoordenadaValida","col","obtenerCoordenadasPosibles","nuevasCoordenadasMarcadas","piezaActual","length","colInspeccionada","filaInspeccionada","inicializarJuego","nivelActual","colInicial","Math","floor","random","filInicial","coordenadaInicial","guardarCoordenadaInicial","keysArray","Object","keys","randomIndex","piezaInicial","nuevoTablero","generarNuevaPieza","direccion","filaNueva","colNueva","piezaNueva","coordenadaAMarcar","hacerMovimiento","j","reiniciarNivel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","row","rowIndex","cell","cellIndex","style","width","display","height","borderColor","borderWidth","justifyContent","alignItems","flexGrow","maxHeight","boxSizing","objectFit","src","alt","_c","$RefreshReg$"],"sources":["/home/ian/codigo/mogartio.github.io/src/components/Sschess.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nimport React from 'react';\nimport caballoBlanco from './../img/caballo_blanco.gif'\nimport torreBlanca from './../img/torre_blanco.gif'\nimport alfilBlanco from './../img/alfil_blanco.gif'\nimport caballoRojo from './../img/caballo_rojo.gif'\nimport torreRojo from './../img/torre_rojo.gif'\nimport alfilRojo from './../img/alfil_rojo.gif'\nimport '.././styles/gridStyle.css'\n  \nexport default function Sschess() {\n    const [level, setLevel] = useState(0);\n    const string_level = \"NIVEL: \" + String(level - 1);\n    const [printt, setPrintt] = useState();\n    let   filaActual;\n    let   colActual;\n    const [contadorPiezas, setContador] = useState(level + 3);\n    const [coordenadasInicialesNivel, setCoordenadasIniciales] = useState([]);\n    const [coordenadaActual, setCoordenadaActual] = useState([]);\n    const [coordenadasMarcadas, setCoordenadasMarcadas] = useState([[]]);\n    const [estadoJuego, setEstadoJuego] = useState(false)\n    const [piecesDictionary, setPiecesDictionary] = useState({\n        'torre': [[0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 0], [2, 0], [3, 0], [4, 0], [5, 0], [6, 0], [7, 0], [8, 0], [-1, 0], [-2, 0], [-3, 0], [-4, 0], [-5, 0], [-6, 0], [-7, 0], [-8, 0], [0, -1], [0, -2], [0, -3], [0, -4], [0, -5], [0, -6], [0, -7], [0, -8]],\n        'caballo': [[1, 2], [2, 1], [-1, 2], [-2, 1], [-1, -2], [-2, -1], [1, -2], [2, -1]],\n        'alfil': [[1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [-1, 1], [-2, 2], [-3, 3], [-4, 4], [-5, 5], [-6, 6], [-7, 7], [-8, 8], [-1, -1], [-2, -2], [-3, -3], [-4, -4], [-5, -5], [-6, -6], [-7, -7], [-8, -8], [1, -1], [2, -2], [3, -3], [4, -4], [5, -5], [6, -6], [7, -7], [8, -8]],\n      });\n\n    \n    const inicializarMatrizz = () =>{\n      const nuevaMatrizz = [];\n      for (let i = 0; i < 8; i++) {\n        const fila = new Array(8).fill(\"\"); \n        nuevaMatrizz.push(fila);\n      }\n      return nuevaMatrizz;\n    }\n    const inicializarMatriz = () =>{\n      const nuevaMatriz = [];\n      for (let i = 0; i < 8; i++) {\n        const fila = new Array(8).fill(\"\"); \n        nuevaMatriz.push(fila);\n      }\n      return nuevaMatriz;\n    }\n    const [estadoInicial, setEstadoInicial] = useState(inicializarMatrizz);\n    const [tablero, setTablero] = useState(inicializarMatriz);\n\n\n    const esCoordenadaValida = (fila, col) => {\n      return (fila>=0 && fila  < 8 && col >=0 && col < 8)\n    }\n\n    const obtenerCoordenadasPosibles = (col, fila) => {\n      let nuevasCoordenadasMarcadas = [];\n      let piezaActual = tablero[fila][col];\n      for (let i=0; i < piecesDictionary[piezaActual].length; i++) {\n        let colInspeccionada = col + piecesDictionary[piezaActual][i][1];\n        let filaInspeccionada = fila + piecesDictionary[piezaActual][i][0];\n\n        if (esCoordenadaValida(filaInspeccionada, colInspeccionada) && tablero[filaInspeccionada][colInspeccionada] != \"\") {\n          nuevasCoordenadasMarcadas.push([filaInspeccionada,colInspeccionada]);\n        }\n      }\n      setCoordenadasMarcadas([...nuevasCoordenadasMarcadas]);\n    }\n\n    \n    function inicializarJuego(nivelActual){\n        setLevel(nivelActual + 1)\n        setContador(nivelActual + 3);\n        setEstadoJuego(true);\n        setCoordenadasMarcadas([]);\n        let colInicial = Math.floor(Math.random() * 8);\n        let filInicial = Math.floor(Math.random() * 8);\n        let coordenadaInicial = [filInicial, colInicial];\n        guardarCoordenadaInicial([...coordenadaInicial]);\n        const keysArray = Object.keys(piecesDictionary);\n        let randomIndex = Math.floor(Math.random() * keysArray.length);\n        let piezaInicial = keysArray[randomIndex];\n        filaActual = filInicial;\n        colActual = colInicial;\n        let nuevoTablero = [...estadoInicial];\n        nuevoTablero[filInicial][colInicial] = piezaInicial;\n        tablero[filInicial][colInicial] = piezaInicial;\n        setEstadoInicial(nuevoTablero);\n        for (let i=0; i< nivelActual + 3; i++){\n            [piezaInicial, filInicial, colInicial] = generarNuevaPieza(piezaInicial, filInicial, colInicial);\n            tablero[filInicial][colInicial] = piezaInicial;\n        }\n        setCoordenadaActual([filaActual, colActual]);\n        coordenadaActual[0] = filaActual;\n        coordenadaActual[1] = colActual;\n        setCoordenadasMarcadas([]);\n        obtenerCoordenadasPosibles(colActual, filaActual);\n    }\n    const guardarCoordenadaInicial = (coordenadaInicial) => {\n      setCoordenadasIniciales(coordenadaInicial);\n    }\n\n    const generarNuevaPieza = (piezaInicial, filInicial, colInicial) => {\n        while (true) {\n            let direccion = piecesDictionary[piezaInicial][Math.floor(Math.random() *piecesDictionary[piezaInicial].length)];\n            let filaNueva =  filInicial + direccion[0];\n            let colNueva = colInicial + direccion[1];\n            if (filaNueva < 0 || colNueva < 0 || filaNueva > 7 || colNueva > 7 || estadoInicial[filaNueva][colNueva] != \"\") {\n                continue\n            }\n            let keysArray = Object.keys(piecesDictionary);\n            let randomIndex = Math.floor(Math.random() * keysArray.length);\n            let piezaNueva = keysArray[randomIndex];\n            let nuevoTablero = [...estadoInicial];\n            nuevoTablero[filaNueva][colNueva] = piezaNueva;\n            setEstadoInicial(nuevoTablero);\n            return [piezaNueva, filaNueva, colNueva];\n        }\n    }\n\n    const coordenadaAMarcar = (fila, col) => {\n      for (let i=0; i < coordenadasMarcadas.length; i++){\n        if (coordenadasMarcadas[i][0] == fila && coordenadasMarcadas[i][1] == col){\n          return true\n        }\n      }\n      return false\n    }\n    const hacerMovimiento = (fila, col) => {\n      if(coordenadaAMarcar(fila, col)) {\n        let nuevoTablero = [...tablero];\n        nuevoTablero[coordenadaActual[0]][coordenadaActual[1]] = \"\";\n        setTablero(nuevoTablero);\n       setContador(contadorPiezas - 1);\n        setPrintt(contadorPiezas)\n        if (contadorPiezas == 1) {\n          setLevel(level + 1);\n          setEstadoJuego(false);\n          for(let i=0; i<8; i++) {\n            for (let j=0; j<8; j++) {\n              tablero[i][j] = \"\";\n              estadoInicial[i][j] = \"\";\n            }\n          }\n          setCoordenadaActual([]);\n          inicializarJuego(level);\n          return\n        }\n        setCoordenadaActual([fila, col]);\n        setCoordenadasMarcadas([]);\n\n        obtenerCoordenadasPosibles(col, fila);\n      }\n    }\n    const reiniciarNivel = () => {\n      setCoordenadaActual([...coordenadasInicialesNivel]);\n      for(let i=0; i<8; i++) {\n        for (let j=0; j<8; j++) {\n          tablero[i][j] = estadoInicial[i][j];\n        }\n      }\n      setContador(level + 2); \n      obtenerCoordenadasPosibles(coordenadasInicialesNivel[1], coordenadasInicialesNivel[0])\n      return     \n    }\n    return (\n        <div className='SschessContainer'>\n          <div className='tituloSSchess'> \n                <p> Shape Shifter Chess!</p>\n          </div>             \n          <div className='gameInfoContainer'>\n            <div className='nivelActual'>\n              {string_level}\n            </div>\n            <div className='buttonContainer'>\n                  {estadoJuego ? (\n                    <button onClick={reiniciarNivel} >Reiniciar Nivel</button>\n                    \n                  ) : (\n                    <button onClick={inicializarJuego(1)} >Empezar juego</button>\n                  )}\n            </div>\n          </div> \n          <div className='gridContainer'>\n            <div className=\"grid\">  \n              {tablero.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"row\">\n                  {row.map((cell, cellIndex) => (\n                    <div\n                    style = {\n                      (coordenadaAMarcar(rowIndex, cellIndex)) ? {\n                        width: '100%',\n                        display: 'flex',\n                        height: '100%',\n                        borderColor: 'rgb(255, 30, 88)',\n                        borderWidth: '3px',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        flexGrow: '0%',\n                        maxHeight: '100%',\n                        boxSizing: 'border-box',\n                        objectFit: 'contain',\n                      } : {\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        borderColor: '#white',\n                        borderWidth: '3px',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        flexGrow: '0%',\n                        maxHeight: '100%',\n                        boxSizing: 'border-box',\n                        objectFit: 'contain',\n\n                      }\n                    }\n                    onClick={() => hacerMovimiento(rowIndex, cellIndex)}\n                    key={cellIndex} className=\"cell\">\n                        {cell === \"torre\" && (rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={torreRojo} alt=\"torreR\" />}\n                        {cell === \"torre\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={torreBlanca} alt=\"torreB\" />}\n                        {cell === \"alfil\" && (rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={alfilRojo} alt=\"alfilR\" />}\n                        {cell === \"alfil\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={alfilBlanco} alt=\"alfilB\" />} \n                        {cell === \"caballo\" && (rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={caballoRojo} alt=\"caballoR\" />}\n                        {cell === \"caballo\" && !(rowIndex == coordenadaActual[0] && cellIndex == coordenadaActual[1]) && <img src={caballoBlanco} alt=\"caballoB\"  />}               \n                    </div>\n                  ))}\n                </div>\n              ))}\n            </div>\n        </div>\n        \n      </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}